{"ast":null,"code":"var _jsxFileName = \"/Users/neilsolon/Documents/4mac/BrainStation/Projects/Neil-Solon-BrainFlix/sprint1/sprint1/src/components/Videos.js\";\nimport React from \"react\";\nexport default function Videos({\n  videoData\n}) {\n  // let mappedVideos = videoData.filter().map(video => {\n  // see if you can figure out how to filter out the first video e.g. the code above chaining .map after .filter\n  let mappedVideos = videoData.filter(vid => {\n    if (vid !== 0) {\n      return;\n    }\n  }).map(video => {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"video\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"video__data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      className: \"video__data-actual\",\n      poster: video.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"video__data-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"video__data-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \" \", video.title), React.createElement(\"p\", {\n      className: \"video__data-channel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \" \", video.channel, \" \")))));\n  });\n  return React.createElement(React.Fragment, null, React.createElement(\"h5\", {\n    className: \"video__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"NEXT VIDEO\"), mappedVideos);\n}","map":{"version":3,"sources":["/Users/neilsolon/Documents/4mac/BrainStation/Projects/Neil-Solon-BrainFlix/sprint1/sprint1/src/components/Videos.js"],"names":["React","Videos","videoData","mappedVideos","filter","vid","map","video","image","title","channel"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA+B;AAC5C;AACA;AACA,MAAIC,YAAY,GAAGD,SAAS,CAACE,MAAV,CAAiBC,GAAG,IAAI;AACvC,QAAIA,GAAG,KAAK,CAAZ,EAAe;AACX;AACH;AACJ,GAJkB,EAIhBC,GAJgB,CAIZC,KAAK,IAAI;AACd,WACE,0CACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,oBAAjB;AAAsC,MAAA,MAAM,EAAEA,KAAK,CAACC,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAoCD,KAAK,CAACE,KAA1C,CADF,EAEE;AAAG,MAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAqCF,KAAK,CAACG,OAA3C,MAFF,CAFF,CAFF,CADF,CADF;AAcD,GAnBkB,CAAnB;AAqBA,SACE,0CACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGP,YAFH,CADF;AAMD","sourcesContent":["import React from \"react\";\n\nexport default function Videos({ videoData }) {\n  // let mappedVideos = videoData.filter().map(video => {\n  // see if you can figure out how to filter out the first video e.g. the code above chaining .map after .filter\n  let mappedVideos = videoData.filter(vid => {\n      if (vid !== 0) {\n          return \n      }\n  }).map(video => {\n    return (\n      <>\n        <div className=\"video\">\n          {/* container for video data */}\n          <div className=\"video__data\">\n            <video className=\"video__data-actual\" poster={video.image} />\n            <div className=\"video__data-info\">\n              <h4 className=\"video__data-title\"> {video.title}</h4>\n              <p className=\"video__data-channel\"> {video.channel} </p>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  });\n\n  return (\n    <>\n      <h5 className=\"video__title\">NEXT VIDEO</h5>\n      {mappedVideos}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}